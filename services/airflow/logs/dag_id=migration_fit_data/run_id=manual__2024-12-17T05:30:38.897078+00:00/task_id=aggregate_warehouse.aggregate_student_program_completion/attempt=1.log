[2024-12-17T05:33:03.254+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-12-17T05:33:03.479+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: migration_fit_data.aggregate_warehouse.aggregate_student_program_completion manual__2024-12-17T05:30:38.897078+00:00 [queued]>
[2024-12-17T05:33:03.677+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: migration_fit_data.aggregate_warehouse.aggregate_student_program_completion manual__2024-12-17T05:30:38.897078+00:00 [queued]>
[2024-12-17T05:33:03.678+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2024-12-17T05:33:04.008+0000] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): aggregate_warehouse.aggregate_student_program_completion> on 2024-12-17 05:30:38.897078+00:00
[2024-12-17T05:33:04.150+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'migration_fit_data', 'aggregate_warehouse.aggregate_student_program_completion', 'manual__2024-12-17T05:30:38.897078+00:00', '--job-id', '956', '--raw', '--subdir', 'DAGS_FOLDER/elt_migrate.py', '--cfg-path', '/tmp/tmpc_6t8ddg']
[2024-12-17T05:33:04.168+0000] {standard_task_runner.py:91} INFO - Job 956: Subtask aggregate_warehouse.aggregate_student_program_completion
[2024-12-17T05:33:04.140+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=38405) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-12-17T05:33:04.191+0000] {standard_task_runner.py:63} INFO - Started process 38424 to run task
[2024-12-17T05:33:04.441+0000] {task_command.py:426} INFO - Running <TaskInstance: migration_fit_data.aggregate_warehouse.aggregate_student_program_completion manual__2024-12-17T05:30:38.897078+00:00 [running]> on host 2f4e9c743994
[2024-12-17T05:33:04.903+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='migration_fit_data' AIRFLOW_CTX_TASK_ID='aggregate_warehouse.aggregate_student_program_completion' AIRFLOW_CTX_EXECUTION_DATE='2024-12-17T05:30:38.897078+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-17T05:30:38.897078+00:00'
[2024-12-17T05:33:04.904+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-12-17T05:33:04.978+0000] {hive.py:475} INFO - USE `default`
[2024-12-17T05:33:05.071+0000] {hive.py:475} INFO - CREATE NAMESPACE IF NOT EXISTS iceberg.aggr_warehouse
[2024-12-17T05:33:05.142+0000] {hive.py:475} INFO - DROP TABLE IF EXISTS iceberg.aggr_warehouse.student_program_completion
[2024-12-17T05:33:05.195+0000] {hive.py:475} INFO - 
        CREATE OR REPLACE TABLE iceberg.aggr_warehouse.student_program_completion
        USING parquet
        AS
        WITH program_requirements AS (
            SELECT
                ps.program_id,
                SUM(ps.required_credit) AS total_required_credit,
                SUM(ps.elective_credit) AS total_elective_credit
            FROM
                iceberg.warehouse.program_semester ps
            GROUP BY
                ps.program_id
        ),
        latest_student_scores AS (
            SELECT
                s.student_id,
                s.student_name,
                ps.program_id,
                ps.program_semester_id,
                c.course_code,
                c.category,
                c.total_credit,
                sf.final_score,
                ROW_NUMBER() OVER (
                    PARTITION BY s.student_id, c.course_code
                    ORDER BY inf.instruction_time_end DESC
                ) AS attempt_rank
            FROM
                iceberg.warehouse.student s
            JOIN iceberg.warehouse.enroll_student es ON s.student_id = es.student_id
            JOIN iceberg.warehouse.enrollment_fact ef ON es.enrollment_id = ef.enrollment_id
            JOIN iceberg.warehouse.instruction_fact inf ON ef.instruction_id = inf.instruction_id
            JOIN iceberg.warehouse.program_semester ps ON inf.program_semester_id = ps.program_semester_id
            JOIN iceberg.warehouse.course c ON inf.course_id = c.course_id
            LEFT JOIN iceberg.warehouse.score_fact sf ON sf.instruction_id = inf.instruction_id AND sf.student_id = s.student_id
        ),
        student_courses_passed AS (
            SELECT
                lss.student_id,
                lss.student_name,
                lss.program_id,
                lss.course_code,
                lss.category,
                lss.total_credit
            FROM
                latest_student_scores lss
            WHERE
                lss.attempt_rank = 1
                AND lss.final_score >= 4
        ),
        student_courses_registered AS (
            SELECT DISTINCT
                lss.student_id,
                lss.student_name,
                lss.program_id,
                lss.course_code,
                lss.category,
                lss.total_credit
            FROM
                latest_student_scores lss
        ),
        aggregated_student_courses AS (
            SELECT
                scp.student_id,
                scp.student_name,
                scp.program_id,
                pr.total_required_credit,
                pr.total_elective_credit,
                COALESCE(SUM(CASE WHEN scp.category = 'required' THEN scp.total_credit ELSE 0 END), 0) AS total_required_credit_registered,
                COALESCE(SUM(CASE WHEN scp.category = 'elective' THEN scp.total_credit ELSE 0 END), 0) AS total_elective_credit_registered,
                COALESCE(SUM(CASE WHEN scp.category = 'required' THEN scp.total_credit ELSE 0 END * 
                    (CASE WHEN scp.final_score >= 4 THEN 1 ELSE 0 END)), 0) AS total_required_credit_passed,
                COALESCE(SUM(CASE WHEN scp.category = 'elective' THEN scp.total_credit ELSE 0 END * 
                    (CASE WHEN scp.final_score >= 4 THEN 1 ELSE 0 END)), 0) AS total_elective_credit_passed
            FROM
                student_courses_registered scp
            JOIN program_requirements pr ON scp.program_id = pr.program_id
            LEFT JOIN student_courses_passed scp_passed ON scp.student_id = scp_passed.student_id 
                AND scp.course_code = scp_passed.course_code 
                AND scp.program_id = scp_passed.program_id
            GROUP BY
                scp.student_id,
                scp.student_name,
                scp.program_id,
                pr.total_required_credit,
                pr.total_elective_credit
        )
        SELECT
            sc.student_id,
            sc.student_name,
            sc.program_id,
            sc.total_required_credit,
            sc.total_elective_credit,
            sc.total_required_credit_registered,
            sc.total_elective_credit_registered,
            sc.total_required_credit_passed,
            sc.total_elective_credit_passed,
            CASE 
                WHEN sc.total_required_credit_passed >= sc.total_required_credit
                    AND sc.total_elective_credit_passed >= sc.total_elective_credit
                THEN 'Completed'
                ELSE 'Not Completed'
            END AS completion_status
        FROM
            aggregated_student_courses sc
        ;
    
[2024-12-17T05:33:06.802+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-12-17T05:33:06.803+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 235, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/operators/python.py", line 252, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/airflow/dags/tasks/fit_task.py", line 138, in aggregate_into_warehouse
    cursor.execute(FIT_AGGREGATE_TABLES[table]["create_table_command"])
  File "/home/airflow/.local/lib/python3.12/site-packages/pyhive/hive.py", line 481, in execute
    _check_status(response)
  File "/home/airflow/.local/lib/python3.12/site-packages/pyhive/hive.py", line 611, in _check_status
    raise OperationalError(response)
pyhive.exc.OperationalError: TExecuteStatementResp(status=TStatus(statusCode=3, infoMessages=["*org.apache.hive.service.cli.HiveSQLException:Error running query: [UNRESOLVED_COLUMN.WITH_SUGGESTION] org.apache.spark.sql.AnalysisException: [UNRESOLVED_COLUMN.WITH_SUGGESTION] A column or function parameter with name `scp`.`final_score` cannot be resolved. Did you mean one of the following? [`scp`.`category`, `scp`.`course_code`, `scp`.`total_credit`, `scp`.`program_id`, `scp`.`student_id`].; line 73 pos 31;\n'ReplaceTableAsSelect TableSpec(Map(),Some(parquet),Map(),None,None,None,false), true, false\n:- ResolvedIdentifier org.apache.iceberg.spark.SparkCatalog@550b0115, aggr_warehouse.student_program_completion\n+- 'Project ['sc.student_id, 'sc.student_name, 'sc.program_id, 'sc.total_required_credit, 'sc.total_elective_credit, 'sc.total_required_credit_registered, 'sc.total_elective_credit_registered, 'sc.total_required_credit_passed, 'sc.total_elective_credit_passed, CASE WHEN (('sc.total_required_credit_passed >= 'sc.total_required_credit) AND ('sc.total_elective_credit_passed >= 'sc.total_elective_credit)) THEN Completed ELSE Not Completed END AS completion_status#13385]\n   +- 'SubqueryAlias sc\n      +- 'SubqueryAlias aggregated_student_courses\n         +- 'Aggregate [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L], [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L, coalesce(sum(CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_required_credit_registered#13389L, coalesce(sum(CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_elective_credit_registered#13390L, 'COALESCE('SUM((CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_required_credit_passed#13391, 'COALESCE('SUM((CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_elective_credit_passed#13392]\n            +- Join LeftOuter, (((student_id#13409 = student_id#13539) AND (course_code#13517L = course_code#13582L)) AND (program_id#13510 = program_id#13575))\n               :- Join Inner, (program_id#13510 = program_id#13534)\n               :  :- SubqueryAlias scp\n               :  :  +- SubqueryAlias student_courses_registered\n               :  :     +- Distinct\n               :  :        +- Project [student_id#13409, student_name#13411, program_id#13510, course_code#13517L, category#13518, total_credit#13519L]\n               :  :           +- SubqueryAlias lss\n               :  :              +- SubqueryAlias latest_student_scores\n               :  :                 +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, attempt_rank#13388]\n               :  :                    +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477, attempt_rank#13388, attempt_rank#13388]\n               :  :                       +- Window [row_number() windowspecdefinition(student_id#13409, course_code#13517L, instruction_time_end#13477 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13409, course_code#13517L], [instruction_time_end#13477 DESC NULLS LAST]\n               :  :                          +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477]\n               :  :                             +- Join LeftOuter, ((instruction_id#13525L = instruction_id#13465L) AND (student_id#13526 = student_id#13409))\n               :  :                                :- Join Inner, (course_id#13467L = course_id#13515L)\n               :  :                                :  :- Join Inner, (program_semester_id#13466 = program_semester_id#13509)\n               :  :                                :  :  :- Join Inner, (instruction_id#13437L = instruction_id#13465L)\n               :  :                                :  :  :  :- Join Inner, (enrollment_id#13434L = enrollment_id#13436L)\n               :  :                                :  :  :  :  :- Join Inner, (student_id#13409 = student_id#13433)\n               :  :                                :  :  :  :  :  :- SubqueryAlias s\n               :  :                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n               :  :                                :  :  :  :  :  :     +- RelationV2[student_id#13409, student_name#13411, class_name#13413, edu_mail#13415, address_id#13418L, national_id#13420L, key_year#13421, gender#13422, student_dob#13423] iceberg.warehouse.student iceberg.warehouse.student\n               :  :                                :  :  :  :  :  +- SubqueryAlias es\n               :  :                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  :        +- RelationV2[student_id#13433, enrollment_id#13434L, enrollment_time#13435] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  +- SubqueryAlias ef\n               :  :                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  :        +- RelationV2[enrollment_id#13436L, instruction_id#13437L, enrollment_start_time#13438, enrollment_end_time#13439, enrollment_class#13440, enrollment_status#13441, last_modified_date#13442, etl_date#13443] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  +- SubqueryAlias inf\n               :  :                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n               :  :                                :  :  :        +- RelationV2[instruction_id#13465L, program_semester_id#13466, course_id#13467L, class_id#13468L, is_required#13469, num_student#13470L, num_pass_student#13471L, num_fail_student#13472L, avg_final_score#13473, instruction_status#13474, instruction_allocate#13475, instruction_time_start#13476, instruction_time_end#13477, last_modified_date#13478, etl_date#13479] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n               :  :                                :  :  +- SubqueryAlias ps\n               :  :                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n               :  :                                :  :        +- RelationV2[program_semester_id#13509, program_id#13510, semester_name#13511, total_credit#13512L, required_credit#13513L, elective_credit#13514L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               :  :                                :  +- SubqueryAlias c\n               :  :                                :     +- SubqueryAlias iceberg.warehouse.course\n               :  :                                :        +- RelationV2[course_id#13515L, course_name#13516, course_code#13517L, category#13518, total_credit#13519L, theory_credit#13520L, practice_credit#13521L, self_learning_credit#13522L] iceberg.warehouse.course iceberg.warehouse.course\n               :  :                                +- SubqueryAlias sf\n               :  :                                   +- SubqueryAlias iceberg.warehouse.score_fact\n               :  :                                      +- RelationV2[score_id#13524L, instruction_id#13525L, student_id#13526, final_score#13527, final_score_4#13528, academic_rank#13529, is_practice#13530, last_modified_date#13531, etl_date#13532] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n               :  +- SubqueryAlias pr\n               :     +- SubqueryAlias program_requirements\n               :        +- Aggregate [program_id#13534], [program_id#13534, sum(required_credit#13537L) AS total_required_credit#13386L, sum(elective_credit#13538L) AS total_elective_credit#13387L]\n               :           +- SubqueryAlias ps\n               :              +- SubqueryAlias iceberg.warehouse.program_semester\n               :                 +- RelationV2[program_semester_id#13533, program_id#13534, semester_name#13535, total_credit#13536L, required_credit#13537L, elective_credit#13538L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               +- SubqueryAlias scp_passed\n                  +- SubqueryAlias student_courses_passed\n                     +- Project [student_id#13539, student_name#13540, program_id#13575, course_code#13582L, category#13583, total_credit#13584L]\n                        +- Filter ((attempt_rank#13388 = 1) AND (final_score#13591 >= cast(4 as double)))\n                           +- SubqueryAlias lss\n                              +- SubqueryAlias latest_student_scores\n                                 +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, attempt_rank#13388]\n                                    +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571, attempt_rank#13388, attempt_rank#13388]\n                                       +- Window [row_number() windowspecdefinition(student_id#13539, course_code#13582L, instruction_time_end#13571 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13539, course_code#13582L], [instruction_time_end#13571 DESC NULLS LAST]\n                                          +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571]\n                                             +- Join LeftOuter, ((instruction_id#13589L = instruction_id#13559L) AND (student_id#13590 = student_id#13539))\n                                                :- Join Inner, (course_id#13561L = course_id#13580L)\n                                                :  :- Join Inner, (program_semester_id#13560 = program_semester_id#13574)\n                                                :  :  :- Join Inner, (instruction_id#13552L = instruction_id#13559L)\n                                                :  :  :  :- Join Inner, (enrollment_id#13549L = enrollment_id#13551L)\n                                                :  :  :  :  :- Join Inner, (student_id#13539 = student_id#13548)\n                                                :  :  :  :  :  :- SubqueryAlias s\n                                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n                                                :  :  :  :  :  :     +- RelationV2[student_id#13539, student_name#13540, class_name#13541, edu_mail#13542, address_id#13543L, national_id#13544L, key_year#13545, gender#13546, student_dob#13547] iceberg.warehouse.student iceberg.warehouse.student\n                                                :  :  :  :  :  +- SubqueryAlias es\n                                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n                                                :  :  :  :  :        +- RelationV2[student_id#13548, enrollment_id#13549L, enrollment_time#13550] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n                                                :  :  :  :  +- SubqueryAlias ef\n                                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n                                                :  :  :  :        +- RelationV2[enrollment_id#13551L, instruction_id#13552L, enrollment_start_time#13553, enrollment_end_time#13554, enrollment_class#13555, enrollment_status#13556, last_modified_date#13557, etl_date#13558] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n                                                :  :  :  +- SubqueryAlias inf\n                                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n                                                :  :  :        +- RelationV2[instruction_id#13559L, program_semester_id#13560, course_id#13561L, class_id#13562L, is_required#13563, num_student#13564L, num_pass_student#13565L, num_fail_student#13566L, avg_final_score#13567, instruction_status#13568, instruction_allocate#13569, instruction_time_start#13570, instruction_time_end#13571, last_modified_date#13572, etl_date#13573] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n                                                :  :  +- SubqueryAlias ps\n                                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n                                                :  :        +- RelationV2[program_semester_id#13574, program_id#13575, semester_name#13576, total_credit#13577L, required_credit#13578L, elective_credit#13579L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n                                                :  +- SubqueryAlias c\n                                                :     +- SubqueryAlias iceberg.warehouse.course\n                                                :        +- RelationV2[course_id#13580L, course_name#13581, course_code#13582L, category#13583, total_credit#13584L, theory_credit#13585L, practice_credit#13586L, self_learning_credit#13587L] iceberg.warehouse.course iceberg.warehouse.course\n                                                +- SubqueryAlias sf\n                                                   +- SubqueryAlias iceberg.warehouse.score_fact\n                                                      +- RelationV2[score_id#13588L, instruction_id#13589L, student_id#13590, final_score#13591, final_score_4#13592, academic_rank#13593, is_practice#13594, last_modified_date#13595, etl_date#13596] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n:36:35", 'org.apache.spark.sql.hive.thriftserver.HiveThriftServerErrors$:runningQueryError:HiveThriftServerErrors.scala:43', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:org$apache$spark$sql$hive$thriftserver$SparkExecuteStatementOperation$$execute:SparkExecuteStatementOperation.scala:262', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:runInternal:SparkExecuteStatementOperation.scala:152', 'org.apache.hive.service.cli.operation.Operation:run:Operation.java:277', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:org$apache$spark$sql$hive$thriftserver$SparkOperation$$super$run:SparkExecuteStatementOperation.scala:41', 'org.apache.spark.sql.hive.thriftserver.SparkOperation:$anonfun$run$1:SparkOperation.scala:45', 'scala.runtime.java8.JFunction0$mcV$sp:apply:JFunction0$mcV$sp.java:23', 'org.apache.spark.sql.hive.thriftserver.SparkOperation:withLocalProperties:SparkOperation.scala:79', 'org.apache.spark.sql.hive.thriftserver.SparkOperation:withLocalProperties$:SparkOperation.scala:63', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:withLocalProperties:SparkExecuteStatementOperation.scala:41', 'org.apache.spark.sql.hive.thriftserver.SparkOperation:run:SparkOperation.scala:45', 'org.apache.spark.sql.hive.thriftserver.SparkOperation:run$:SparkOperation.scala:43', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:run:SparkExecuteStatementOperation.scala:41', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:484', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:460', 'jdk.internal.reflect.GeneratedMethodAccessor17:invoke::-1', 'jdk.internal.reflect.DelegatingMethodAccessorImpl:invoke::-1', 'java.lang.reflect.Method:invoke::-1', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:71', 'org.apache.hive.service.cli.session.HiveSessionProxy:lambda$invoke$0:HiveSessionProxy.java:58', 'java.security.AccessController:doPrivileged::-2', 'javax.security.auth.Subject:doAs::-1', 'org.apache.hadoop.security.UserGroupInformation:doAs:UserGroupInformation.java:1878', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:58', 'com.sun.proxy.$Proxy39:executeStatement::-1', 'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:282', 'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:453', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1557', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1542', 'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:38', 'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', 'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:52', 'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:310', 'java.util.concurrent.ThreadPoolExecutor:runWorker::-1', 'java.util.concurrent.ThreadPoolExecutor$Worker:run::-1', 'java.lang.Thread:run::-1', "*org.apache.spark.sql.catalyst.ExtendedAnalysisException:[UNRESOLVED_COLUMN.WITH_SUGGESTION] A column or function parameter with name `scp`.`final_score` cannot be resolved. Did you mean one of the following? [`scp`.`category`, `scp`.`course_code`, `scp`.`total_credit`, `scp`.`program_id`, `scp`.`student_id`].; line 73 pos 31;\n'ReplaceTableAsSelect TableSpec(Map(),Some(parquet),Map(),None,None,None,false), true, false\n:- ResolvedIdentifier org.apache.iceberg.spark.SparkCatalog@550b0115, aggr_warehouse.student_program_completion\n+- 'Project ['sc.student_id, 'sc.student_name, 'sc.program_id, 'sc.total_required_credit, 'sc.total_elective_credit, 'sc.total_required_credit_registered, 'sc.total_elective_credit_registered, 'sc.total_required_credit_passed, 'sc.total_elective_credit_passed, CASE WHEN (('sc.total_required_credit_passed >= 'sc.total_required_credit) AND ('sc.total_elective_credit_passed >= 'sc.total_elective_credit)) THEN Completed ELSE Not Completed END AS completion_status#13385]\n   +- 'SubqueryAlias sc\n      +- 'SubqueryAlias aggregated_student_courses\n         +- 'Aggregate [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L], [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L, coalesce(sum(CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_required_credit_registered#13389L, coalesce(sum(CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_elective_credit_registered#13390L, 'COALESCE('SUM((CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_required_credit_passed#13391, 'COALESCE('SUM((CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_elective_credit_passed#13392]\n            +- Join LeftOuter, (((student_id#13409 = student_id#13539) AND (course_code#13517L = course_code#13582L)) AND (program_id#13510 = program_id#13575))\n               :- Join Inner, (program_id#13510 = program_id#13534)\n               :  :- SubqueryAlias scp\n               :  :  +- SubqueryAlias student_courses_registered\n               :  :     +- Distinct\n               :  :        +- Project [student_id#13409, student_name#13411, program_id#13510, course_code#13517L, category#13518, total_credit#13519L]\n               :  :           +- SubqueryAlias lss\n               :  :              +- SubqueryAlias latest_student_scores\n               :  :                 +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, attempt_rank#13388]\n               :  :                    +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477, attempt_rank#13388, attempt_rank#13388]\n               :  :                       +- Window [row_number() windowspecdefinition(student_id#13409, course_code#13517L, instruction_time_end#13477 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13409, course_code#13517L], [instruction_time_end#13477 DESC NULLS LAST]\n               :  :                          +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477]\n               :  :                             +- Join LeftOuter, ((instruction_id#13525L = instruction_id#13465L) AND (student_id#13526 = student_id#13409))\n               :  :                                :- Join Inner, (course_id#13467L = course_id#13515L)\n               :  :                                :  :- Join Inner, (program_semester_id#13466 = program_semester_id#13509)\n               :  :                                :  :  :- Join Inner, (instruction_id#13437L = instruction_id#13465L)\n               :  :                                :  :  :  :- Join Inner, (enrollment_id#13434L = enrollment_id#13436L)\n               :  :                                :  :  :  :  :- Join Inner, (student_id#13409 = student_id#13433)\n               :  :                                :  :  :  :  :  :- SubqueryAlias s\n               :  :                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n               :  :                                :  :  :  :  :  :     +- RelationV2[student_id#13409, student_name#13411, class_name#13413, edu_mail#13415, address_id#13418L, national_id#13420L, key_year#13421, gender#13422, student_dob#13423] iceberg.warehouse.student iceberg.warehouse.student\n               :  :                                :  :  :  :  :  +- SubqueryAlias es\n               :  :                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  :        +- RelationV2[student_id#13433, enrollment_id#13434L, enrollment_time#13435] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  +- SubqueryAlias ef\n               :  :                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  :        +- RelationV2[enrollment_id#13436L, instruction_id#13437L, enrollment_start_time#13438, enrollment_end_time#13439, enrollment_class#13440, enrollment_status#13441, last_modified_date#13442, etl_date#13443] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  +- SubqueryAlias inf\n               :  :                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n               :  :                                :  :  :        +- RelationV2[instruction_id#13465L, program_semester_id#13466, course_id#13467L, class_id#13468L, is_required#13469, num_student#13470L, num_pass_student#13471L, num_fail_student#13472L, avg_final_score#13473, instruction_status#13474, instruction_allocate#13475, instruction_time_start#13476, instruction_time_end#13477, last_modified_date#13478, etl_date#13479] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n               :  :                                :  :  +- SubqueryAlias ps\n               :  :                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n               :  :                                :  :        +- RelationV2[program_semester_id#13509, program_id#13510, semester_name#13511, total_credit#13512L, required_credit#13513L, elective_credit#13514L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               :  :                                :  +- SubqueryAlias c\n               :  :                                :     +- SubqueryAlias iceberg.warehouse.course\n               :  :                                :        +- RelationV2[course_id#13515L, course_name#13516, course_code#13517L, category#13518, total_credit#13519L, theory_credit#13520L, practice_credit#13521L, self_learning_credit#13522L] iceberg.warehouse.course iceberg.warehouse.course\n               :  :                                +- SubqueryAlias sf\n               :  :                                   +- SubqueryAlias iceberg.warehouse.score_fact\n               :  :                                      +- RelationV2[score_id#13524L, instruction_id#13525L, student_id#13526, final_score#13527, final_score_4#13528, academic_rank#13529, is_practice#13530, last_modified_date#13531, etl_date#13532] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n               :  +- SubqueryAlias pr\n               :     +- SubqueryAlias program_requirements\n               :        +- Aggregate [program_id#13534], [program_id#13534, sum(required_credit#13537L) AS total_required_credit#13386L, sum(elective_credit#13538L) AS total_elective_credit#13387L]\n               :           +- SubqueryAlias ps\n               :              +- SubqueryAlias iceberg.warehouse.program_semester\n               :                 +- RelationV2[program_semester_id#13533, program_id#13534, semester_name#13535, total_credit#13536L, required_credit#13537L, elective_credit#13538L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               +- SubqueryAlias scp_passed\n                  +- SubqueryAlias student_courses_passed\n                     +- Project [student_id#13539, student_name#13540, program_id#13575, course_code#13582L, category#13583, total_credit#13584L]\n                        +- Filter ((attempt_rank#13388 = 1) AND (final_score#13591 >= cast(4 as double)))\n                           +- SubqueryAlias lss\n                              +- SubqueryAlias latest_student_scores\n                                 +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, attempt_rank#13388]\n                                    +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571, attempt_rank#13388, attempt_rank#13388]\n                                       +- Window [row_number() windowspecdefinition(student_id#13539, course_code#13582L, instruction_time_end#13571 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13539, course_code#13582L], [instruction_time_end#13571 DESC NULLS LAST]\n                                          +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571]\n                                             +- Join LeftOuter, ((instruction_id#13589L = instruction_id#13559L) AND (student_id#13590 = student_id#13539))\n                                                :- Join Inner, (course_id#13561L = course_id#13580L)\n                                                :  :- Join Inner, (program_semester_id#13560 = program_semester_id#13574)\n                                                :  :  :- Join Inner, (instruction_id#13552L = instruction_id#13559L)\n                                                :  :  :  :- Join Inner, (enrollment_id#13549L = enrollment_id#13551L)\n                                                :  :  :  :  :- Join Inner, (student_id#13539 = student_id#13548)\n                                                :  :  :  :  :  :- SubqueryAlias s\n                                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n                                                :  :  :  :  :  :     +- RelationV2[student_id#13539, student_name#13540, class_name#13541, edu_mail#13542, address_id#13543L, national_id#13544L, key_year#13545, gender#13546, student_dob#13547] iceberg.warehouse.student iceberg.warehouse.student\n                                                :  :  :  :  :  +- SubqueryAlias es\n                                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n                                                :  :  :  :  :        +- RelationV2[student_id#13548, enrollment_id#13549L, enrollment_time#13550] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n                                                :  :  :  :  +- SubqueryAlias ef\n                                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n                                                :  :  :  :        +- RelationV2[enrollment_id#13551L, instruction_id#13552L, enrollment_start_time#13553, enrollment_end_time#13554, enrollment_class#13555, enrollment_status#13556, last_modified_date#13557, etl_date#13558] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n                                                :  :  :  +- SubqueryAlias inf\n                                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n                                                :  :  :        +- RelationV2[instruction_id#13559L, program_semester_id#13560, course_id#13561L, class_id#13562L, is_required#13563, num_student#13564L, num_pass_student#13565L, num_fail_student#13566L, avg_final_score#13567, instruction_status#13568, instruction_allocate#13569, instruction_time_start#13570, instruction_time_end#13571, last_modified_date#13572, etl_date#13573] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n                                                :  :  +- SubqueryAlias ps\n                                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n                                                :  :        +- RelationV2[program_semester_id#13574, program_id#13575, semester_name#13576, total_credit#13577L, required_credit#13578L, elective_credit#13579L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n                                                :  +- SubqueryAlias c\n                                                :     +- SubqueryAlias iceberg.warehouse.course\n                                                :        +- RelationV2[course_id#13580L, course_name#13581, course_code#13582L, category#13583, total_credit#13584L, theory_credit#13585L, practice_credit#13586L, self_learning_credit#13587L] iceberg.warehouse.course iceberg.warehouse.course\n                                                +- SubqueryAlias sf\n                                                   +- SubqueryAlias iceberg.warehouse.score_fact\n                                                      +- RelationV2[score_id#13588L, instruction_id#13589L, student_id#13590, final_score#13591, final_score_4#13592, academic_rank#13593, is_practice#13594, last_modified_date#13595, etl_date#13596] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n:150:115", 'org.apache.spark.sql.errors.QueryCompilationErrors$:unresolvedAttributeError:QueryCompilationErrors.scala:307', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:org$apache$spark$sql$catalyst$analysis$CheckAnalysis$$failUnresolvedAttribute:CheckAnalysis.scala:147', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$6:CheckAnalysis.scala:266', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$6$adapted:CheckAnalysis.scala:264', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:244', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.mutable.ResizableArray:foreach:ResizableArray.scala:62', 'scala.collection.mutable.ResizableArray:foreach$:ResizableArray.scala:55', 'scala.collection.mutable.ArrayBuffer:foreach:ArrayBuffer.scala:49', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.mutable.ResizableArray:foreach:ResizableArray.scala:62', 'scala.collection.mutable.ResizableArray:foreach$:ResizableArray.scala:55', 'scala.collection.mutable.ArrayBuffer:foreach:ArrayBuffer.scala:49', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.mutable.ResizableArray:foreach:ResizableArray.scala:62', 'scala.collection.mutable.ResizableArray:foreach$:ResizableArray.scala:55', 'scala.collection.mutable.ArrayBuffer:foreach:ArrayBuffer.scala:49', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$5:CheckAnalysis.scala:264', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$5$adapted:CheckAnalysis.scala:264', 'scala.collection.immutable.List:foreach:List.scala:431', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$2:CheckAnalysis.scala:264', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$2$adapted:CheckAnalysis.scala:182', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:244', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.immutable.List:foreach:List.scala:431', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:checkAnalysis0:CheckAnalysis.scala:182', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:checkAnalysis0$:CheckAnalysis.scala:164', 'org.apache.spark.sql.catalyst.analysis.Analyzer:checkAnalysis0:Analyzer.scala:188', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:checkAnalysis:CheckAnalysis.scala:160', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:checkAnalysis$:CheckAnalysis.scala:150', 'org.apache.spark.sql.catalyst.analysis.Analyzer:checkAnalysis:Analyzer.scala:188', 'org.apache.spark.sql.catalyst.analysis.Analyzer:$anonfun$executeAndCheck$1:Analyzer.scala:211', 'org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$:markInAnalyzer:AnalysisHelper.scala:330', 'org.apache.spark.sql.catalyst.analysis.Analyzer:executeAndCheck:Analyzer.scala:208', 'org.apache.spark.sql.execution.QueryExecution:$anonfun$analyzed$1:QueryExecution.scala:77', 'org.apache.spark.sql.catalyst.QueryPlanningTracker:measurePhase:QueryPlanningTracker.scala:138', 'org.apache.spark.sql.execution.QueryExecution:$anonfun$executePhase$2:QueryExecution.scala:219', 'org.apache.spark.sql.execution.QueryExecution$:withInternalError:QueryExecution.scala:546', 'org.apache.spark.sql.execution.QueryExecution:$anonfun$executePhase$1:QueryExecution.scala:219', 'org.apache.spark.sql.SparkSession:withActive:SparkSession.scala:900', 'org.apache.spark.sql.execution.QueryExecution:executePhase:QueryExecution.scala:218', 'org.apache.spark.sql.execution.QueryExecution:analyzed$lzycompute:QueryExecution.scala:77', 'org.apache.spark.sql.execution.QueryExecution:analyzed:QueryExecution.scala:74', 'org.apache.spark.sql.execution.QueryExecution:assertAnalyzed:QueryExecution.scala:66', 'org.apache.spark.sql.Dataset$:$anonfun$ofRows$2:Dataset.scala:99', 'org.apache.spark.sql.SparkSession:withActive:SparkSession.scala:900', 'org.apache.spark.sql.Dataset$:ofRows:Dataset.scala:97', 'org.apache.spark.sql.SparkSession:$anonfun$sql$4:SparkSession.scala:691', 'org.apache.spark.sql.SparkSession:withActive:SparkSession.scala:900', 'org.apache.spark.sql.SparkSession:sql:SparkSession.scala:682', 'org.apache.spark.sql.SparkSession:sql:SparkSession.scala:713', 'org.apache.spark.sql.SparkSession:sql:SparkSession.scala:744', 'org.apache.spark.sql.SQLContext:sql:SQLContext.scala:651', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:org$apache$spark$sql$hive$thriftserver$SparkExecuteStatementOperation$$execute:SparkExecuteStatementOperation.scala:227'], sqlState='42703', errorCode=0, errorMessage="Error running query: [UNRESOLVED_COLUMN.WITH_SUGGESTION] org.apache.spark.sql.AnalysisException: [UNRESOLVED_COLUMN.WITH_SUGGESTION] A column or function parameter with name `scp`.`final_score` cannot be resolved. Did you mean one of the following? [`scp`.`category`, `scp`.`course_code`, `scp`.`total_credit`, `scp`.`program_id`, `scp`.`student_id`].; line 73 pos 31;\n'ReplaceTableAsSelect TableSpec(Map(),Some(parquet),Map(),None,None,None,false), true, false\n:- ResolvedIdentifier org.apache.iceberg.spark.SparkCatalog@550b0115, aggr_warehouse.student_program_completion\n+- 'Project ['sc.student_id, 'sc.student_name, 'sc.program_id, 'sc.total_required_credit, 'sc.total_elective_credit, 'sc.total_required_credit_registered, 'sc.total_elective_credit_registered, 'sc.total_required_credit_passed, 'sc.total_elective_credit_passed, CASE WHEN (('sc.total_required_credit_passed >= 'sc.total_required_credit) AND ('sc.total_elective_credit_passed >= 'sc.total_elective_credit)) THEN Completed ELSE Not Completed END AS completion_status#13385]\n   +- 'SubqueryAlias sc\n      +- 'SubqueryAlias aggregated_student_courses\n         +- 'Aggregate [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L], [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L, coalesce(sum(CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_required_credit_registered#13389L, coalesce(sum(CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_elective_credit_registered#13390L, 'COALESCE('SUM((CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_required_credit_passed#13391, 'COALESCE('SUM((CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_elective_credit_passed#13392]\n            +- Join LeftOuter, (((student_id#13409 = student_id#13539) AND (course_code#13517L = course_code#13582L)) AND (program_id#13510 = program_id#13575))\n               :- Join Inner, (program_id#13510 = program_id#13534)\n               :  :- SubqueryAlias scp\n               :  :  +- SubqueryAlias student_courses_registered\n               :  :     +- Distinct\n               :  :        +- Project [student_id#13409, student_name#13411, program_id#13510, course_code#13517L, category#13518, total_credit#13519L]\n               :  :           +- SubqueryAlias lss\n               :  :              +- SubqueryAlias latest_student_scores\n               :  :                 +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, attempt_rank#13388]\n               :  :                    +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477, attempt_rank#13388, attempt_rank#13388]\n               :  :                       +- Window [row_number() windowspecdefinition(student_id#13409, course_code#13517L, instruction_time_end#13477 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13409, course_code#13517L], [instruction_time_end#13477 DESC NULLS LAST]\n               :  :                          +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477]\n               :  :                             +- Join LeftOuter, ((instruction_id#13525L = instruction_id#13465L) AND (student_id#13526 = student_id#13409))\n               :  :                                :- Join Inner, (course_id#13467L = course_id#13515L)\n               :  :                                :  :- Join Inner, (program_semester_id#13466 = program_semester_id#13509)\n               :  :                                :  :  :- Join Inner, (instruction_id#13437L = instruction_id#13465L)\n               :  :                                :  :  :  :- Join Inner, (enrollment_id#13434L = enrollment_id#13436L)\n               :  :                                :  :  :  :  :- Join Inner, (student_id#13409 = student_id#13433)\n               :  :                                :  :  :  :  :  :- SubqueryAlias s\n               :  :                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n               :  :                                :  :  :  :  :  :     +- RelationV2[student_id#13409, student_name#13411, class_name#13413, edu_mail#13415, address_id#13418L, national_id#13420L, key_year#13421, gender#13422, student_dob#13423] iceberg.warehouse.student iceberg.warehouse.student\n               :  :                                :  :  :  :  :  +- SubqueryAlias es\n               :  :                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  :        +- RelationV2[student_id#13433, enrollment_id#13434L, enrollment_time#13435] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  +- SubqueryAlias ef\n               :  :                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  :        +- RelationV2[enrollment_id#13436L, instruction_id#13437L, enrollment_start_time#13438, enrollment_end_time#13439, enrollment_class#13440, enrollment_status#13441, last_modified_date#13442, etl_date#13443] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  +- SubqueryAlias inf\n               :  :                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n               :  :                                :  :  :        +- RelationV2[instruction_id#13465L, program_semester_id#13466, course_id#13467L, class_id#13468L, is_required#13469, num_student#13470L, num_pass_student#13471L, num_fail_student#13472L, avg_final_score#13473, instruction_status#13474, instruction_allocate#13475, instruction_time_start#13476, instruction_time_end#13477, last_modified_date#13478, etl_date#13479] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n               :  :                                :  :  +- SubqueryAlias ps\n               :  :                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n               :  :                                :  :        +- RelationV2[program_semester_id#13509, program_id#13510, semester_name#13511, total_credit#13512L, required_credit#13513L, elective_credit#13514L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               :  :                                :  +- SubqueryAlias c\n               :  :                                :     +- SubqueryAlias iceberg.warehouse.course\n               :  :                                :        +- RelationV2[course_id#13515L, course_name#13516, course_code#13517L, category#13518, total_credit#13519L, theory_credit#13520L, practice_credit#13521L, self_learning_credit#13522L] iceberg.warehouse.course iceberg.warehouse.course\n               :  :                                +- SubqueryAlias sf\n               :  :                                   +- SubqueryAlias iceberg.warehouse.score_fact\n               :  :                                      +- RelationV2[score_id#13524L, instruction_id#13525L, student_id#13526, final_score#13527, final_score_4#13528, academic_rank#13529, is_practice#13530, last_modified_date#13531, etl_date#13532] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n               :  +- SubqueryAlias pr\n               :     +- SubqueryAlias program_requirements\n               :        +- Aggregate [program_id#13534], [program_id#13534, sum(required_credit#13537L) AS total_required_credit#13386L, sum(elective_credit#13538L) AS total_elective_credit#13387L]\n               :           +- SubqueryAlias ps\n               :              +- SubqueryAlias iceberg.warehouse.program_semester\n               :                 +- RelationV2[program_semester_id#13533, program_id#13534, semester_name#13535, total_credit#13536L, required_credit#13537L, elective_credit#13538L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               +- SubqueryAlias scp_passed\n                  +- SubqueryAlias student_courses_passed\n                     +- Project [student_id#13539, student_name#13540, program_id#13575, course_code#13582L, category#13583, total_credit#13584L]\n                        +- Filter ((attempt_rank#13388 = 1) AND (final_score#13591 >= cast(4 as double)))\n                           +- SubqueryAlias lss\n                              +- SubqueryAlias latest_student_scores\n                                 +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, attempt_rank#13388]\n                                    +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571, attempt_rank#13388, attempt_rank#13388]\n                                       +- Window [row_number() windowspecdefinition(student_id#13539, course_code#13582L, instruction_time_end#13571 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13539, course_code#13582L], [instruction_time_end#13571 DESC NULLS LAST]\n                                          +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571]\n                                             +- Join LeftOuter, ((instruction_id#13589L = instruction_id#13559L) AND (student_id#13590 = student_id#13539))\n                                                :- Join Inner, (course_id#13561L = course_id#13580L)\n                                                :  :- Join Inner, (program_semester_id#13560 = program_semester_id#13574)\n                                                :  :  :- Join Inner, (instruction_id#13552L = instruction_id#13559L)\n                                                :  :  :  :- Join Inner, (enrollment_id#13549L = enrollment_id#13551L)\n                                                :  :  :  :  :- Join Inner, (student_id#13539 = student_id#13548)\n                                                :  :  :  :  :  :- SubqueryAlias s\n                                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n                                                :  :  :  :  :  :     +- RelationV2[student_id#13539, student_name#13540, class_name#13541, edu_mail#13542, address_id#13543L, national_id#13544L, key_year#13545, gender#13546, student_dob#13547] iceberg.warehouse.student iceberg.warehouse.student\n                                                :  :  :  :  :  +- SubqueryAlias es\n                                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n                                                :  :  :  :  :        +- RelationV2[student_id#13548, enrollment_id#13549L, enrollment_time#13550] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n                                                :  :  :  :  +- SubqueryAlias ef\n                                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n                                                :  :  :  :        +- RelationV2[enrollment_id#13551L, instruction_id#13552L, enrollment_start_time#13553, enrollment_end_time#13554, enrollment_class#13555, enrollment_status#13556, last_modified_date#13557, etl_date#13558] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n                                                :  :  :  +- SubqueryAlias inf\n                                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n                                                :  :  :        +- RelationV2[instruction_id#13559L, program_semester_id#13560, course_id#13561L, class_id#13562L, is_required#13563, num_student#13564L, num_pass_student#13565L, num_fail_student#13566L, avg_final_score#13567, instruction_status#13568, instruction_allocate#13569, instruction_time_start#13570, instruction_time_end#13571, last_modified_date#13572, etl_date#13573] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n                                                :  :  +- SubqueryAlias ps\n                                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n                                                :  :        +- RelationV2[program_semester_id#13574, program_id#13575, semester_name#13576, total_credit#13577L, required_credit#13578L, elective_credit#13579L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n                                                :  +- SubqueryAlias c\n                                                :     +- SubqueryAlias iceberg.warehouse.course\n                                                :        +- RelationV2[course_id#13580L, course_name#13581, course_code#13582L, category#13583, total_credit#13584L, theory_credit#13585L, practice_credit#13586L, self_learning_credit#13587L] iceberg.warehouse.course iceberg.warehouse.course\n                                                +- SubqueryAlias sf\n                                                   +- SubqueryAlias iceberg.warehouse.score_fact\n                                                      +- RelationV2[score_id#13588L, instruction_id#13589L, student_id#13590, final_score#13591, final_score_4#13592, academic_rank#13593, is_practice#13594, last_modified_date#13595, etl_date#13596] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n"), operationHandle=None)
[2024-12-17T05:33:06.830+0000] {taskinstance.py:1206} INFO - Marking task as FAILED. dag_id=migration_fit_data, task_id=aggregate_warehouse.aggregate_student_program_completion, run_id=manual__2024-12-17T05:30:38.897078+00:00, execution_date=20241217T053038, start_date=20241217T053303, end_date=20241217T053306
[2024-12-17T05:33:06.857+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 956 for task aggregate_warehouse.aggregate_student_program_completion (TExecuteStatementResp(status=TStatus(statusCode=3, infoMessages=["*org.apache.hive.service.cli.HiveSQLException:Error running query: [UNRESOLVED_COLUMN.WITH_SUGGESTION] org.apache.spark.sql.AnalysisException: [UNRESOLVED_COLUMN.WITH_SUGGESTION] A column or function parameter with name `scp`.`final_score` cannot be resolved. Did you mean one of the following? [`scp`.`category`, `scp`.`course_code`, `scp`.`total_credit`, `scp`.`program_id`, `scp`.`student_id`].; line 73 pos 31;\n'ReplaceTableAsSelect TableSpec(Map(),Some(parquet),Map(),None,None,None,false), true, false\n:- ResolvedIdentifier org.apache.iceberg.spark.SparkCatalog@550b0115, aggr_warehouse.student_program_completion\n+- 'Project ['sc.student_id, 'sc.student_name, 'sc.program_id, 'sc.total_required_credit, 'sc.total_elective_credit, 'sc.total_required_credit_registered, 'sc.total_elective_credit_registered, 'sc.total_required_credit_passed, 'sc.total_elective_credit_passed, CASE WHEN (('sc.total_required_credit_passed >= 'sc.total_required_credit) AND ('sc.total_elective_credit_passed >= 'sc.total_elective_credit)) THEN Completed ELSE Not Completed END AS completion_status#13385]\n   +- 'SubqueryAlias sc\n      +- 'SubqueryAlias aggregated_student_courses\n         +- 'Aggregate [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L], [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L, coalesce(sum(CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_required_credit_registered#13389L, coalesce(sum(CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_elective_credit_registered#13390L, 'COALESCE('SUM((CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_required_credit_passed#13391, 'COALESCE('SUM((CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_elective_credit_passed#13392]\n            +- Join LeftOuter, (((student_id#13409 = student_id#13539) AND (course_code#13517L = course_code#13582L)) AND (program_id#13510 = program_id#13575))\n               :- Join Inner, (program_id#13510 = program_id#13534)\n               :  :- SubqueryAlias scp\n               :  :  +- SubqueryAlias student_courses_registered\n               :  :     +- Distinct\n               :  :        +- Project [student_id#13409, student_name#13411, program_id#13510, course_code#13517L, category#13518, total_credit#13519L]\n               :  :           +- SubqueryAlias lss\n               :  :              +- SubqueryAlias latest_student_scores\n               :  :                 +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, attempt_rank#13388]\n               :  :                    +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477, attempt_rank#13388, attempt_rank#13388]\n               :  :                       +- Window [row_number() windowspecdefinition(student_id#13409, course_code#13517L, instruction_time_end#13477 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13409, course_code#13517L], [instruction_time_end#13477 DESC NULLS LAST]\n               :  :                          +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477]\n               :  :                             +- Join LeftOuter, ((instruction_id#13525L = instruction_id#13465L) AND (student_id#13526 = student_id#13409))\n               :  :                                :- Join Inner, (course_id#13467L = course_id#13515L)\n               :  :                                :  :- Join Inner, (program_semester_id#13466 = program_semester_id#13509)\n               :  :                                :  :  :- Join Inner, (instruction_id#13437L = instruction_id#13465L)\n               :  :                                :  :  :  :- Join Inner, (enrollment_id#13434L = enrollment_id#13436L)\n               :  :                                :  :  :  :  :- Join Inner, (student_id#13409 = student_id#13433)\n               :  :                                :  :  :  :  :  :- SubqueryAlias s\n               :  :                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n               :  :                                :  :  :  :  :  :     +- RelationV2[student_id#13409, student_name#13411, class_name#13413, edu_mail#13415, address_id#13418L, national_id#13420L, key_year#13421, gender#13422, student_dob#13423] iceberg.warehouse.student iceberg.warehouse.student\n               :  :                                :  :  :  :  :  +- SubqueryAlias es\n               :  :                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  :        +- RelationV2[student_id#13433, enrollment_id#13434L, enrollment_time#13435] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  +- SubqueryAlias ef\n               :  :                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  :        +- RelationV2[enrollment_id#13436L, instruction_id#13437L, enrollment_start_time#13438, enrollment_end_time#13439, enrollment_class#13440, enrollment_status#13441, last_modified_date#13442, etl_date#13443] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  +- SubqueryAlias inf\n               :  :                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n               :  :                                :  :  :        +- RelationV2[instruction_id#13465L, program_semester_id#13466, course_id#13467L, class_id#13468L, is_required#13469, num_student#13470L, num_pass_student#13471L, num_fail_student#13472L, avg_final_score#13473, instruction_status#13474, instruction_allocate#13475, instruction_time_start#13476, instruction_time_end#13477, last_modified_date#13478, etl_date#13479] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n               :  :                                :  :  +- SubqueryAlias ps\n               :  :                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n               :  :                                :  :        +- RelationV2[program_semester_id#13509, program_id#13510, semester_name#13511, total_credit#13512L, required_credit#13513L, elective_credit#13514L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               :  :                                :  +- SubqueryAlias c\n               :  :                                :     +- SubqueryAlias iceberg.warehouse.course\n               :  :                                :        +- RelationV2[course_id#13515L, course_name#13516, course_code#13517L, category#13518, total_credit#13519L, theory_credit#13520L, practice_credit#13521L, self_learning_credit#13522L] iceberg.warehouse.course iceberg.warehouse.course\n               :  :                                +- SubqueryAlias sf\n               :  :                                   +- SubqueryAlias iceberg.warehouse.score_fact\n               :  :                                      +- RelationV2[score_id#13524L, instruction_id#13525L, student_id#13526, final_score#13527, final_score_4#13528, academic_rank#13529, is_practice#13530, last_modified_date#13531, etl_date#13532] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n               :  +- SubqueryAlias pr\n               :     +- SubqueryAlias program_requirements\n               :        +- Aggregate [program_id#13534], [program_id#13534, sum(required_credit#13537L) AS total_required_credit#13386L, sum(elective_credit#13538L) AS total_elective_credit#13387L]\n               :           +- SubqueryAlias ps\n               :              +- SubqueryAlias iceberg.warehouse.program_semester\n               :                 +- RelationV2[program_semester_id#13533, program_id#13534, semester_name#13535, total_credit#13536L, required_credit#13537L, elective_credit#13538L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               +- SubqueryAlias scp_passed\n                  +- SubqueryAlias student_courses_passed\n                     +- Project [student_id#13539, student_name#13540, program_id#13575, course_code#13582L, category#13583, total_credit#13584L]\n                        +- Filter ((attempt_rank#13388 = 1) AND (final_score#13591 >= cast(4 as double)))\n                           +- SubqueryAlias lss\n                              +- SubqueryAlias latest_student_scores\n                                 +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, attempt_rank#13388]\n                                    +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571, attempt_rank#13388, attempt_rank#13388]\n                                       +- Window [row_number() windowspecdefinition(student_id#13539, course_code#13582L, instruction_time_end#13571 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13539, course_code#13582L], [instruction_time_end#13571 DESC NULLS LAST]\n                                          +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571]\n                                             +- Join LeftOuter, ((instruction_id#13589L = instruction_id#13559L) AND (student_id#13590 = student_id#13539))\n                                                :- Join Inner, (course_id#13561L = course_id#13580L)\n                                                :  :- Join Inner, (program_semester_id#13560 = program_semester_id#13574)\n                                                :  :  :- Join Inner, (instruction_id#13552L = instruction_id#13559L)\n                                                :  :  :  :- Join Inner, (enrollment_id#13549L = enrollment_id#13551L)\n                                                :  :  :  :  :- Join Inner, (student_id#13539 = student_id#13548)\n                                                :  :  :  :  :  :- SubqueryAlias s\n                                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n                                                :  :  :  :  :  :     +- RelationV2[student_id#13539, student_name#13540, class_name#13541, edu_mail#13542, address_id#13543L, national_id#13544L, key_year#13545, gender#13546, student_dob#13547] iceberg.warehouse.student iceberg.warehouse.student\n                                                :  :  :  :  :  +- SubqueryAlias es\n                                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n                                                :  :  :  :  :        +- RelationV2[student_id#13548, enrollment_id#13549L, enrollment_time#13550] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n                                                :  :  :  :  +- SubqueryAlias ef\n                                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n                                                :  :  :  :        +- RelationV2[enrollment_id#13551L, instruction_id#13552L, enrollment_start_time#13553, enrollment_end_time#13554, enrollment_class#13555, enrollment_status#13556, last_modified_date#13557, etl_date#13558] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n                                                :  :  :  +- SubqueryAlias inf\n                                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n                                                :  :  :        +- RelationV2[instruction_id#13559L, program_semester_id#13560, course_id#13561L, class_id#13562L, is_required#13563, num_student#13564L, num_pass_student#13565L, num_fail_student#13566L, avg_final_score#13567, instruction_status#13568, instruction_allocate#13569, instruction_time_start#13570, instruction_time_end#13571, last_modified_date#13572, etl_date#13573] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n                                                :  :  +- SubqueryAlias ps\n                                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n                                                :  :        +- RelationV2[program_semester_id#13574, program_id#13575, semester_name#13576, total_credit#13577L, required_credit#13578L, elective_credit#13579L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n                                                :  +- SubqueryAlias c\n                                                :     +- SubqueryAlias iceberg.warehouse.course\n                                                :        +- RelationV2[course_id#13580L, course_name#13581, course_code#13582L, category#13583, total_credit#13584L, theory_credit#13585L, practice_credit#13586L, self_learning_credit#13587L] iceberg.warehouse.course iceberg.warehouse.course\n                                                +- SubqueryAlias sf\n                                                   +- SubqueryAlias iceberg.warehouse.score_fact\n                                                      +- RelationV2[score_id#13588L, instruction_id#13589L, student_id#13590, final_score#13591, final_score_4#13592, academic_rank#13593, is_practice#13594, last_modified_date#13595, etl_date#13596] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n:36:35", 'org.apache.spark.sql.hive.thriftserver.HiveThriftServerErrors$:runningQueryError:HiveThriftServerErrors.scala:43', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:org$apache$spark$sql$hive$thriftserver$SparkExecuteStatementOperation$$execute:SparkExecuteStatementOperation.scala:262', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:runInternal:SparkExecuteStatementOperation.scala:152', 'org.apache.hive.service.cli.operation.Operation:run:Operation.java:277', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:org$apache$spark$sql$hive$thriftserver$SparkOperation$$super$run:SparkExecuteStatementOperation.scala:41', 'org.apache.spark.sql.hive.thriftserver.SparkOperation:$anonfun$run$1:SparkOperation.scala:45', 'scala.runtime.java8.JFunction0$mcV$sp:apply:JFunction0$mcV$sp.java:23', 'org.apache.spark.sql.hive.thriftserver.SparkOperation:withLocalProperties:SparkOperation.scala:79', 'org.apache.spark.sql.hive.thriftserver.SparkOperation:withLocalProperties$:SparkOperation.scala:63', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:withLocalProperties:SparkExecuteStatementOperation.scala:41', 'org.apache.spark.sql.hive.thriftserver.SparkOperation:run:SparkOperation.scala:45', 'org.apache.spark.sql.hive.thriftserver.SparkOperation:run$:SparkOperation.scala:43', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:run:SparkExecuteStatementOperation.scala:41', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatementInternal:HiveSessionImpl.java:484', 'org.apache.hive.service.cli.session.HiveSessionImpl:executeStatement:HiveSessionImpl.java:460', 'jdk.internal.reflect.GeneratedMethodAccessor17:invoke::-1', 'jdk.internal.reflect.DelegatingMethodAccessorImpl:invoke::-1', 'java.lang.reflect.Method:invoke::-1', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:71', 'org.apache.hive.service.cli.session.HiveSessionProxy:lambda$invoke$0:HiveSessionProxy.java:58', 'java.security.AccessController:doPrivileged::-2', 'javax.security.auth.Subject:doAs::-1', 'org.apache.hadoop.security.UserGroupInformation:doAs:UserGroupInformation.java:1878', 'org.apache.hive.service.cli.session.HiveSessionProxy:invoke:HiveSessionProxy.java:58', 'com.sun.proxy.$Proxy39:executeStatement::-1', 'org.apache.hive.service.cli.CLIService:executeStatement:CLIService.java:282', 'org.apache.hive.service.cli.thrift.ThriftCLIService:ExecuteStatement:ThriftCLIService.java:453', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1557', 'org.apache.hive.service.rpc.thrift.TCLIService$Processor$ExecuteStatement:getResult:TCLIService.java:1542', 'org.apache.thrift.ProcessFunction:process:ProcessFunction.java:38', 'org.apache.thrift.TBaseProcessor:process:TBaseProcessor.java:39', 'org.apache.hive.service.auth.TSetIpAddressProcessor:process:TSetIpAddressProcessor.java:52', 'org.apache.thrift.server.TThreadPoolServer$WorkerProcess:run:TThreadPoolServer.java:310', 'java.util.concurrent.ThreadPoolExecutor:runWorker::-1', 'java.util.concurrent.ThreadPoolExecutor$Worker:run::-1', 'java.lang.Thread:run::-1', "*org.apache.spark.sql.catalyst.ExtendedAnalysisException:[UNRESOLVED_COLUMN.WITH_SUGGESTION] A column or function parameter with name `scp`.`final_score` cannot be resolved. Did you mean one of the following? [`scp`.`category`, `scp`.`course_code`, `scp`.`total_credit`, `scp`.`program_id`, `scp`.`student_id`].; line 73 pos 31;\n'ReplaceTableAsSelect TableSpec(Map(),Some(parquet),Map(),None,None,None,false), true, false\n:- ResolvedIdentifier org.apache.iceberg.spark.SparkCatalog@550b0115, aggr_warehouse.student_program_completion\n+- 'Project ['sc.student_id, 'sc.student_name, 'sc.program_id, 'sc.total_required_credit, 'sc.total_elective_credit, 'sc.total_required_credit_registered, 'sc.total_elective_credit_registered, 'sc.total_required_credit_passed, 'sc.total_elective_credit_passed, CASE WHEN (('sc.total_required_credit_passed >= 'sc.total_required_credit) AND ('sc.total_elective_credit_passed >= 'sc.total_elective_credit)) THEN Completed ELSE Not Completed END AS completion_status#13385]\n   +- 'SubqueryAlias sc\n      +- 'SubqueryAlias aggregated_student_courses\n         +- 'Aggregate [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L], [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L, coalesce(sum(CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_required_credit_registered#13389L, coalesce(sum(CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_elective_credit_registered#13390L, 'COALESCE('SUM((CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_required_credit_passed#13391, 'COALESCE('SUM((CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_elective_credit_passed#13392]\n            +- Join LeftOuter, (((student_id#13409 = student_id#13539) AND (course_code#13517L = course_code#13582L)) AND (program_id#13510 = program_id#13575))\n               :- Join Inner, (program_id#13510 = program_id#13534)\n               :  :- SubqueryAlias scp\n               :  :  +- SubqueryAlias student_courses_registered\n               :  :     +- Distinct\n               :  :        +- Project [student_id#13409, student_name#13411, program_id#13510, course_code#13517L, category#13518, total_credit#13519L]\n               :  :           +- SubqueryAlias lss\n               :  :              +- SubqueryAlias latest_student_scores\n               :  :                 +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, attempt_rank#13388]\n               :  :                    +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477, attempt_rank#13388, attempt_rank#13388]\n               :  :                       +- Window [row_number() windowspecdefinition(student_id#13409, course_code#13517L, instruction_time_end#13477 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13409, course_code#13517L], [instruction_time_end#13477 DESC NULLS LAST]\n               :  :                          +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477]\n               :  :                             +- Join LeftOuter, ((instruction_id#13525L = instruction_id#13465L) AND (student_id#13526 = student_id#13409))\n               :  :                                :- Join Inner, (course_id#13467L = course_id#13515L)\n               :  :                                :  :- Join Inner, (program_semester_id#13466 = program_semester_id#13509)\n               :  :                                :  :  :- Join Inner, (instruction_id#13437L = instruction_id#13465L)\n               :  :                                :  :  :  :- Join Inner, (enrollment_id#13434L = enrollment_id#13436L)\n               :  :                                :  :  :  :  :- Join Inner, (student_id#13409 = student_id#13433)\n               :  :                                :  :  :  :  :  :- SubqueryAlias s\n               :  :                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n               :  :                                :  :  :  :  :  :     +- RelationV2[student_id#13409, student_name#13411, class_name#13413, edu_mail#13415, address_id#13418L, national_id#13420L, key_year#13421, gender#13422, student_dob#13423] iceberg.warehouse.student iceberg.warehouse.student\n               :  :                                :  :  :  :  :  +- SubqueryAlias es\n               :  :                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  :        +- RelationV2[student_id#13433, enrollment_id#13434L, enrollment_time#13435] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  +- SubqueryAlias ef\n               :  :                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  :        +- RelationV2[enrollment_id#13436L, instruction_id#13437L, enrollment_start_time#13438, enrollment_end_time#13439, enrollment_class#13440, enrollment_status#13441, last_modified_date#13442, etl_date#13443] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  +- SubqueryAlias inf\n               :  :                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n               :  :                                :  :  :        +- RelationV2[instruction_id#13465L, program_semester_id#13466, course_id#13467L, class_id#13468L, is_required#13469, num_student#13470L, num_pass_student#13471L, num_fail_student#13472L, avg_final_score#13473, instruction_status#13474, instruction_allocate#13475, instruction_time_start#13476, instruction_time_end#13477, last_modified_date#13478, etl_date#13479] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n               :  :                                :  :  +- SubqueryAlias ps\n               :  :                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n               :  :                                :  :        +- RelationV2[program_semester_id#13509, program_id#13510, semester_name#13511, total_credit#13512L, required_credit#13513L, elective_credit#13514L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               :  :                                :  +- SubqueryAlias c\n               :  :                                :     +- SubqueryAlias iceberg.warehouse.course\n               :  :                                :        +- RelationV2[course_id#13515L, course_name#13516, course_code#13517L, category#13518, total_credit#13519L, theory_credit#13520L, practice_credit#13521L, self_learning_credit#13522L] iceberg.warehouse.course iceberg.warehouse.course\n               :  :                                +- SubqueryAlias sf\n               :  :                                   +- SubqueryAlias iceberg.warehouse.score_fact\n               :  :                                      +- RelationV2[score_id#13524L, instruction_id#13525L, student_id#13526, final_score#13527, final_score_4#13528, academic_rank#13529, is_practice#13530, last_modified_date#13531, etl_date#13532] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n               :  +- SubqueryAlias pr\n               :     +- SubqueryAlias program_requirements\n               :        +- Aggregate [program_id#13534], [program_id#13534, sum(required_credit#13537L) AS total_required_credit#13386L, sum(elective_credit#13538L) AS total_elective_credit#13387L]\n               :           +- SubqueryAlias ps\n               :              +- SubqueryAlias iceberg.warehouse.program_semester\n               :                 +- RelationV2[program_semester_id#13533, program_id#13534, semester_name#13535, total_credit#13536L, required_credit#13537L, elective_credit#13538L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               +- SubqueryAlias scp_passed\n                  +- SubqueryAlias student_courses_passed\n                     +- Project [student_id#13539, student_name#13540, program_id#13575, course_code#13582L, category#13583, total_credit#13584L]\n                        +- Filter ((attempt_rank#13388 = 1) AND (final_score#13591 >= cast(4 as double)))\n                           +- SubqueryAlias lss\n                              +- SubqueryAlias latest_student_scores\n                                 +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, attempt_rank#13388]\n                                    +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571, attempt_rank#13388, attempt_rank#13388]\n                                       +- Window [row_number() windowspecdefinition(student_id#13539, course_code#13582L, instruction_time_end#13571 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13539, course_code#13582L], [instruction_time_end#13571 DESC NULLS LAST]\n                                          +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571]\n                                             +- Join LeftOuter, ((instruction_id#13589L = instruction_id#13559L) AND (student_id#13590 = student_id#13539))\n                                                :- Join Inner, (course_id#13561L = course_id#13580L)\n                                                :  :- Join Inner, (program_semester_id#13560 = program_semester_id#13574)\n                                                :  :  :- Join Inner, (instruction_id#13552L = instruction_id#13559L)\n                                                :  :  :  :- Join Inner, (enrollment_id#13549L = enrollment_id#13551L)\n                                                :  :  :  :  :- Join Inner, (student_id#13539 = student_id#13548)\n                                                :  :  :  :  :  :- SubqueryAlias s\n                                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n                                                :  :  :  :  :  :     +- RelationV2[student_id#13539, student_name#13540, class_name#13541, edu_mail#13542, address_id#13543L, national_id#13544L, key_year#13545, gender#13546, student_dob#13547] iceberg.warehouse.student iceberg.warehouse.student\n                                                :  :  :  :  :  +- SubqueryAlias es\n                                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n                                                :  :  :  :  :        +- RelationV2[student_id#13548, enrollment_id#13549L, enrollment_time#13550] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n                                                :  :  :  :  +- SubqueryAlias ef\n                                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n                                                :  :  :  :        +- RelationV2[enrollment_id#13551L, instruction_id#13552L, enrollment_start_time#13553, enrollment_end_time#13554, enrollment_class#13555, enrollment_status#13556, last_modified_date#13557, etl_date#13558] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n                                                :  :  :  +- SubqueryAlias inf\n                                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n                                                :  :  :        +- RelationV2[instruction_id#13559L, program_semester_id#13560, course_id#13561L, class_id#13562L, is_required#13563, num_student#13564L, num_pass_student#13565L, num_fail_student#13566L, avg_final_score#13567, instruction_status#13568, instruction_allocate#13569, instruction_time_start#13570, instruction_time_end#13571, last_modified_date#13572, etl_date#13573] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n                                                :  :  +- SubqueryAlias ps\n                                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n                                                :  :        +- RelationV2[program_semester_id#13574, program_id#13575, semester_name#13576, total_credit#13577L, required_credit#13578L, elective_credit#13579L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n                                                :  +- SubqueryAlias c\n                                                :     +- SubqueryAlias iceberg.warehouse.course\n                                                :        +- RelationV2[course_id#13580L, course_name#13581, course_code#13582L, category#13583, total_credit#13584L, theory_credit#13585L, practice_credit#13586L, self_learning_credit#13587L] iceberg.warehouse.course iceberg.warehouse.course\n                                                +- SubqueryAlias sf\n                                                   +- SubqueryAlias iceberg.warehouse.score_fact\n                                                      +- RelationV2[score_id#13588L, instruction_id#13589L, student_id#13590, final_score#13591, final_score_4#13592, academic_rank#13593, is_practice#13594, last_modified_date#13595, etl_date#13596] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n:150:115", 'org.apache.spark.sql.errors.QueryCompilationErrors$:unresolvedAttributeError:QueryCompilationErrors.scala:307', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:org$apache$spark$sql$catalyst$analysis$CheckAnalysis$$failUnresolvedAttribute:CheckAnalysis.scala:147', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$6:CheckAnalysis.scala:266', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$6$adapted:CheckAnalysis.scala:264', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:244', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.mutable.ResizableArray:foreach:ResizableArray.scala:62', 'scala.collection.mutable.ResizableArray:foreach$:ResizableArray.scala:55', 'scala.collection.mutable.ArrayBuffer:foreach:ArrayBuffer.scala:49', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.mutable.ResizableArray:foreach:ResizableArray.scala:62', 'scala.collection.mutable.ResizableArray:foreach$:ResizableArray.scala:55', 'scala.collection.mutable.ArrayBuffer:foreach:ArrayBuffer.scala:49', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.mutable.ResizableArray:foreach:ResizableArray.scala:62', 'scala.collection.mutable.ResizableArray:foreach$:ResizableArray.scala:55', 'scala.collection.mutable.ArrayBuffer:foreach:ArrayBuffer.scala:49', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$5:CheckAnalysis.scala:264', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$5$adapted:CheckAnalysis.scala:264', 'scala.collection.immutable.List:foreach:List.scala:431', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$2:CheckAnalysis.scala:264', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:$anonfun$checkAnalysis0$2$adapted:CheckAnalysis.scala:182', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:244', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.Iterator:foreach:Iterator.scala:943', 'scala.collection.Iterator:foreach$:Iterator.scala:943', 'scala.collection.AbstractIterator:foreach:Iterator.scala:1431', 'scala.collection.IterableLike:foreach:IterableLike.scala:74', 'scala.collection.IterableLike:foreach$:IterableLike.scala:73', 'scala.collection.AbstractIterable:foreach:Iterable.scala:56', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.trees.TreeNode:$anonfun$foreachUp$1$adapted:TreeNode.scala:243', 'scala.collection.immutable.List:foreach:List.scala:431', 'org.apache.spark.sql.catalyst.trees.TreeNode:foreachUp:TreeNode.scala:243', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:checkAnalysis0:CheckAnalysis.scala:182', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:checkAnalysis0$:CheckAnalysis.scala:164', 'org.apache.spark.sql.catalyst.analysis.Analyzer:checkAnalysis0:Analyzer.scala:188', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:checkAnalysis:CheckAnalysis.scala:160', 'org.apache.spark.sql.catalyst.analysis.CheckAnalysis:checkAnalysis$:CheckAnalysis.scala:150', 'org.apache.spark.sql.catalyst.analysis.Analyzer:checkAnalysis:Analyzer.scala:188', 'org.apache.spark.sql.catalyst.analysis.Analyzer:$anonfun$executeAndCheck$1:Analyzer.scala:211', 'org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$:markInAnalyzer:AnalysisHelper.scala:330', 'org.apache.spark.sql.catalyst.analysis.Analyzer:executeAndCheck:Analyzer.scala:208', 'org.apache.spark.sql.execution.QueryExecution:$anonfun$analyzed$1:QueryExecution.scala:77', 'org.apache.spark.sql.catalyst.QueryPlanningTracker:measurePhase:QueryPlanningTracker.scala:138', 'org.apache.spark.sql.execution.QueryExecution:$anonfun$executePhase$2:QueryExecution.scala:219', 'org.apache.spark.sql.execution.QueryExecution$:withInternalError:QueryExecution.scala:546', 'org.apache.spark.sql.execution.QueryExecution:$anonfun$executePhase$1:QueryExecution.scala:219', 'org.apache.spark.sql.SparkSession:withActive:SparkSession.scala:900', 'org.apache.spark.sql.execution.QueryExecution:executePhase:QueryExecution.scala:218', 'org.apache.spark.sql.execution.QueryExecution:analyzed$lzycompute:QueryExecution.scala:77', 'org.apache.spark.sql.execution.QueryExecution:analyzed:QueryExecution.scala:74', 'org.apache.spark.sql.execution.QueryExecution:assertAnalyzed:QueryExecution.scala:66', 'org.apache.spark.sql.Dataset$:$anonfun$ofRows$2:Dataset.scala:99', 'org.apache.spark.sql.SparkSession:withActive:SparkSession.scala:900', 'org.apache.spark.sql.Dataset$:ofRows:Dataset.scala:97', 'org.apache.spark.sql.SparkSession:$anonfun$sql$4:SparkSession.scala:691', 'org.apache.spark.sql.SparkSession:withActive:SparkSession.scala:900', 'org.apache.spark.sql.SparkSession:sql:SparkSession.scala:682', 'org.apache.spark.sql.SparkSession:sql:SparkSession.scala:713', 'org.apache.spark.sql.SparkSession:sql:SparkSession.scala:744', 'org.apache.spark.sql.SQLContext:sql:SQLContext.scala:651', 'org.apache.spark.sql.hive.thriftserver.SparkExecuteStatementOperation:org$apache$spark$sql$hive$thriftserver$SparkExecuteStatementOperation$$execute:SparkExecuteStatementOperation.scala:227'], sqlState='42703', errorCode=0, errorMessage="Error running query: [UNRESOLVED_COLUMN.WITH_SUGGESTION] org.apache.spark.sql.AnalysisException: [UNRESOLVED_COLUMN.WITH_SUGGESTION] A column or function parameter with name `scp`.`final_score` cannot be resolved. Did you mean one of the following? [`scp`.`category`, `scp`.`course_code`, `scp`.`total_credit`, `scp`.`program_id`, `scp`.`student_id`].; line 73 pos 31;\n'ReplaceTableAsSelect TableSpec(Map(),Some(parquet),Map(),None,None,None,false), true, false\n:- ResolvedIdentifier org.apache.iceberg.spark.SparkCatalog@550b0115, aggr_warehouse.student_program_completion\n+- 'Project ['sc.student_id, 'sc.student_name, 'sc.program_id, 'sc.total_required_credit, 'sc.total_elective_credit, 'sc.total_required_credit_registered, 'sc.total_elective_credit_registered, 'sc.total_required_credit_passed, 'sc.total_elective_credit_passed, CASE WHEN (('sc.total_required_credit_passed >= 'sc.total_required_credit) AND ('sc.total_elective_credit_passed >= 'sc.total_elective_credit)) THEN Completed ELSE Not Completed END AS completion_status#13385]\n   +- 'SubqueryAlias sc\n      +- 'SubqueryAlias aggregated_student_courses\n         +- 'Aggregate [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L], [student_id#13409, student_name#13411, program_id#13510, total_required_credit#13386L, total_elective_credit#13387L, coalesce(sum(CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_required_credit_registered#13389L, coalesce(sum(CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END), cast(0 as bigint)) AS total_elective_credit_registered#13390L, 'COALESCE('SUM((CASE WHEN (category#13518 = required) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_required_credit_passed#13391, 'COALESCE('SUM((CASE WHEN (category#13518 = elective) THEN total_credit#13519L ELSE cast(0 as bigint) END * CASE WHEN ('scp.final_score >= 4) THEN 1 ELSE 0 END)), 0) AS total_elective_credit_passed#13392]\n            +- Join LeftOuter, (((student_id#13409 = student_id#13539) AND (course_code#13517L = course_code#13582L)) AND (program_id#13510 = program_id#13575))\n               :- Join Inner, (program_id#13510 = program_id#13534)\n               :  :- SubqueryAlias scp\n               :  :  +- SubqueryAlias student_courses_registered\n               :  :     +- Distinct\n               :  :        +- Project [student_id#13409, student_name#13411, program_id#13510, course_code#13517L, category#13518, total_credit#13519L]\n               :  :           +- SubqueryAlias lss\n               :  :              +- SubqueryAlias latest_student_scores\n               :  :                 +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, attempt_rank#13388]\n               :  :                    +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477, attempt_rank#13388, attempt_rank#13388]\n               :  :                       +- Window [row_number() windowspecdefinition(student_id#13409, course_code#13517L, instruction_time_end#13477 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13409, course_code#13517L], [instruction_time_end#13477 DESC NULLS LAST]\n               :  :                          +- Project [student_id#13409, student_name#13411, program_id#13510, program_semester_id#13509, course_code#13517L, category#13518, total_credit#13519L, final_score#13527, instruction_time_end#13477]\n               :  :                             +- Join LeftOuter, ((instruction_id#13525L = instruction_id#13465L) AND (student_id#13526 = student_id#13409))\n               :  :                                :- Join Inner, (course_id#13467L = course_id#13515L)\n               :  :                                :  :- Join Inner, (program_semester_id#13466 = program_semester_id#13509)\n               :  :                                :  :  :- Join Inner, (instruction_id#13437L = instruction_id#13465L)\n               :  :                                :  :  :  :- Join Inner, (enrollment_id#13434L = enrollment_id#13436L)\n               :  :                                :  :  :  :  :- Join Inner, (student_id#13409 = student_id#13433)\n               :  :                                :  :  :  :  :  :- SubqueryAlias s\n               :  :                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n               :  :                                :  :  :  :  :  :     +- RelationV2[student_id#13409, student_name#13411, class_name#13413, edu_mail#13415, address_id#13418L, national_id#13420L, key_year#13421, gender#13422, student_dob#13423] iceberg.warehouse.student iceberg.warehouse.student\n               :  :                                :  :  :  :  :  +- SubqueryAlias es\n               :  :                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  :        +- RelationV2[student_id#13433, enrollment_id#13434L, enrollment_time#13435] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n               :  :                                :  :  :  :  +- SubqueryAlias ef\n               :  :                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  :        +- RelationV2[enrollment_id#13436L, instruction_id#13437L, enrollment_start_time#13438, enrollment_end_time#13439, enrollment_class#13440, enrollment_status#13441, last_modified_date#13442, etl_date#13443] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n               :  :                                :  :  :  +- SubqueryAlias inf\n               :  :                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n               :  :                                :  :  :        +- RelationV2[instruction_id#13465L, program_semester_id#13466, course_id#13467L, class_id#13468L, is_required#13469, num_student#13470L, num_pass_student#13471L, num_fail_student#13472L, avg_final_score#13473, instruction_status#13474, instruction_allocate#13475, instruction_time_start#13476, instruction_time_end#13477, last_modified_date#13478, etl_date#13479] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n               :  :                                :  :  +- SubqueryAlias ps\n               :  :                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n               :  :                                :  :        +- RelationV2[program_semester_id#13509, program_id#13510, semester_name#13511, total_credit#13512L, required_credit#13513L, elective_credit#13514L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               :  :                                :  +- SubqueryAlias c\n               :  :                                :     +- SubqueryAlias iceberg.warehouse.course\n               :  :                                :        +- RelationV2[course_id#13515L, course_name#13516, course_code#13517L, category#13518, total_credit#13519L, theory_credit#13520L, practice_credit#13521L, self_learning_credit#13522L] iceberg.warehouse.course iceberg.warehouse.course\n               :  :                                +- SubqueryAlias sf\n               :  :                                   +- SubqueryAlias iceberg.warehouse.score_fact\n               :  :                                      +- RelationV2[score_id#13524L, instruction_id#13525L, student_id#13526, final_score#13527, final_score_4#13528, academic_rank#13529, is_practice#13530, last_modified_date#13531, etl_date#13532] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n               :  +- SubqueryAlias pr\n               :     +- SubqueryAlias program_requirements\n               :        +- Aggregate [program_id#13534], [program_id#13534, sum(required_credit#13537L) AS total_required_credit#13386L, sum(elective_credit#13538L) AS total_elective_credit#13387L]\n               :           +- SubqueryAlias ps\n               :              +- SubqueryAlias iceberg.warehouse.program_semester\n               :                 +- RelationV2[program_semester_id#13533, program_id#13534, semester_name#13535, total_credit#13536L, required_credit#13537L, elective_credit#13538L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n               +- SubqueryAlias scp_passed\n                  +- SubqueryAlias student_courses_passed\n                     +- Project [student_id#13539, student_name#13540, program_id#13575, course_code#13582L, category#13583, total_credit#13584L]\n                        +- Filter ((attempt_rank#13388 = 1) AND (final_score#13591 >= cast(4 as double)))\n                           +- SubqueryAlias lss\n                              +- SubqueryAlias latest_student_scores\n                                 +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, attempt_rank#13388]\n                                    +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571, attempt_rank#13388, attempt_rank#13388]\n                                       +- Window [row_number() windowspecdefinition(student_id#13539, course_code#13582L, instruction_time_end#13571 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS attempt_rank#13388], [student_id#13539, course_code#13582L], [instruction_time_end#13571 DESC NULLS LAST]\n                                          +- Project [student_id#13539, student_name#13540, program_id#13575, program_semester_id#13574, course_code#13582L, category#13583, total_credit#13584L, final_score#13591, instruction_time_end#13571]\n                                             +- Join LeftOuter, ((instruction_id#13589L = instruction_id#13559L) AND (student_id#13590 = student_id#13539))\n                                                :- Join Inner, (course_id#13561L = course_id#13580L)\n                                                :  :- Join Inner, (program_semester_id#13560 = program_semester_id#13574)\n                                                :  :  :- Join Inner, (instruction_id#13552L = instruction_id#13559L)\n                                                :  :  :  :- Join Inner, (enrollment_id#13549L = enrollment_id#13551L)\n                                                :  :  :  :  :- Join Inner, (student_id#13539 = student_id#13548)\n                                                :  :  :  :  :  :- SubqueryAlias s\n                                                :  :  :  :  :  :  +- SubqueryAlias iceberg.warehouse.student\n                                                :  :  :  :  :  :     +- RelationV2[student_id#13539, student_name#13540, class_name#13541, edu_mail#13542, address_id#13543L, national_id#13544L, key_year#13545, gender#13546, student_dob#13547] iceberg.warehouse.student iceberg.warehouse.student\n                                                :  :  :  :  :  +- SubqueryAlias es\n                                                :  :  :  :  :     +- SubqueryAlias iceberg.warehouse.enroll_student\n                                                :  :  :  :  :        +- RelationV2[student_id#13548, enrollment_id#13549L, enrollment_time#13550] iceberg.warehouse.enroll_student iceberg.warehouse.enroll_student\n                                                :  :  :  :  +- SubqueryAlias ef\n                                                :  :  :  :     +- SubqueryAlias iceberg.warehouse.enrollment_fact\n                                                :  :  :  :        +- RelationV2[enrollment_id#13551L, instruction_id#13552L, enrollment_start_time#13553, enrollment_end_time#13554, enrollment_class#13555, enrollment_status#13556, last_modified_date#13557, etl_date#13558] iceberg.warehouse.enrollment_fact iceberg.warehouse.enrollment_fact\n                                                :  :  :  +- SubqueryAlias inf\n                                                :  :  :     +- SubqueryAlias iceberg.warehouse.instruction_fact\n                                                :  :  :        +- RelationV2[instruction_id#13559L, program_semester_id#13560, course_id#13561L, class_id#13562L, is_required#13563, num_student#13564L, num_pass_student#13565L, num_fail_student#13566L, avg_final_score#13567, instruction_status#13568, instruction_allocate#13569, instruction_time_start#13570, instruction_time_end#13571, last_modified_date#13572, etl_date#13573] iceberg.warehouse.instruction_fact iceberg.warehouse.instruction_fact\n                                                :  :  +- SubqueryAlias ps\n                                                :  :     +- SubqueryAlias iceberg.warehouse.program_semester\n                                                :  :        +- RelationV2[program_semester_id#13574, program_id#13575, semester_name#13576, total_credit#13577L, required_credit#13578L, elective_credit#13579L] iceberg.warehouse.program_semester iceberg.warehouse.program_semester\n                                                :  +- SubqueryAlias c\n                                                :     +- SubqueryAlias iceberg.warehouse.course\n                                                :        +- RelationV2[course_id#13580L, course_name#13581, course_code#13582L, category#13583, total_credit#13584L, theory_credit#13585L, practice_credit#13586L, self_learning_credit#13587L] iceberg.warehouse.course iceberg.warehouse.course\n                                                +- SubqueryAlias sf\n                                                   +- SubqueryAlias iceberg.warehouse.score_fact\n                                                      +- RelationV2[score_id#13588L, instruction_id#13589L, student_id#13590, final_score#13591, final_score_4#13592, academic_rank#13593, is_practice#13594, last_modified_date#13595, etl_date#13596] iceberg.warehouse.score_fact iceberg.warehouse.score_fact\n"), operationHandle=None); 38424)
[2024-12-17T05:33:06.878+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2024-12-17T05:33:06.918+0000] {taskinstance.py:3498} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2024-12-17T05:33:06.926+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
